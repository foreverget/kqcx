<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	
	<!-- 访问项目名 -->
	<display-name>kq-war</display-name>
		<welcome-file-list>
		<!-- 默认页 -->
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	<!-- Character Encoding filter 字符编码 start -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 字符编码 end -->
	<!-- spring配置 start -->
	<!-- ContextLoaderListener的作用就是启动Web容器时，
		自动装配ApplicationContext的配置信息(自动读取applicationContext.xml文件)。
		因为它实现了ServletContextListener这个接口，在web.xml配置这个监听器，启动容器时，就会默认执行它实现的方法。 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 使Spring支持request与session的scope：
		request表示该针对每一次HTTP请求都会产生一个新的bean，同时该bean仅在当前 HTTP
		request内有效，配置实例： request、session、global
		session使用的时候首先要在初始化web的web.xml中做如下配置 -->  
	<listener>  
	  <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>  
	</listener>  
	  
	<!-- Spring 刷新Introspector防止内存泄露 -->  
	<listener>  
	    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
	</listener>
	<!-- session超时定义,单位为分钟 -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	<!-- SpringMVC配置 --> 
	<servlet> 
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	</servlet>
	<!-- springmvc 请求后缀 --> 
	<servlet-mapping> 
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!-- spring配置end -->
</web-app>